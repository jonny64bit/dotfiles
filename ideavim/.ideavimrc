""" Map leader to Space
"" ========================================================
let mapleader=" "

""" Plugins
"" ========================================================
set NERDTree
set easymotion
set highlightedyank
set argtextobj
set sneak
set quickscope
set which-key

""" Plugin settings
"" ========================================================
let g:argtextobj_pairs="[:],(:),<:>"
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

""" Common settings
"" ========================================================

" which key panel timeout
set notimeout

set showmode
set showcmd
set visualbell

" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=10

" Do incremental searching.
set incsearch

set ignorecase
set smartcase
set incsearch
set hlsearch

set relativenumber
set startofline

""" Idea specific settings
"" ========================================================

set ideajoin
set idearefactormode=select

"" Key mappings
"" ========================================================

" move escape to jk
inoremap jk <Esc>

" Tab navigation
nnoremap <A-m> :tabnext<CR>
nnoremap <A-n> :tabprev<CR>

" Pane navigation
nnoremap <A-h> <C-w>h
nnoremap <A-l> <C-w>l
nnoremap <A-k> <C-w>k
nnoremap <A-j> <C-w>j

" Jump between methods
nnoremap [[ :action MethodUp<cr>
nnoremap ]] :action MethodDown<cr>

" Search
nmap <leader>/ :action Find<cr>
nmap <leader>. :action FindInPath<cr>

" Popup navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)

" Don't use Ex mode, use Q for formatting.
map Q gq

"" Leader commands
"" ========================================================

" Comment lines
" map <leader>cl <action>(CommentByLineComment)

" Jump around with easymotion
map <leader>s <Plug>(easymotion-s)
" map <leader>e <Plug>(easymotion-f)

" Open NERDTree (use q to exit)
" map <leader>x :NERDTreeToggle<CR>

" Folding
" map <leader>zc :action CollapseAllRegions<CR>
" map <leader>zo :action ExpandAllRegions<CR>

" Window splits
" map <leader>wv <Action>(SplitVertically)
" map <leader>ws <Action>(SplitHorizontally)
" map <leader>wu <Action>(Unsplit)
" map <leader>wm <Action>(MoveEditorToOppositeTabGroup)

" Actions
" map <leader>am <action>(ShowIntentionActions)
" map <leader>as <action>(SearchEverywhere)

" üî≠ Telescope
" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fb <action>(Switcher)
map <leader>ft <action>(TextSearchAction)
map <leader>fo <action>(RecentFiles)
map <leader>fs <Action>(FileStructurePopup)

" ‚öì Harpoon
map <leader>hh <action>(ShowBookmarks)
map <leader>ha <action>(ToggleBookmarkWithMnemonic)
map <leader>h1 <action>(GotoBookmark1)
map <leader>h2 <action>(GotoBookmark2)
map <leader>h3 <action>(GotoBookmark3)
map <leader>h4 <action>(GotoBookmark4)
map <leader>h5 <action>(GotoBookmark5)
map <leader>h6 <action>(GotoBookmark6)
map <leader>h7 <action>(GotoBookmark7)
map <leader>h8 <action>(GotoBookmark8)
map <leader>h9 <action>(GotoBookmark9)
map <leader>hj <action>(GotoNextBookmark)
map <leader>hk <action>(GotoPreviousBookmark)

" Close active tab
map <leader>q <action>(CloseContent)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rp <Action>(Refactorings.QuickListPopupAction)
map <leader>rr <Action>(ReformatCode)

" Go to code
map <leader>gd <Action>(GotoDeclaration)
map <leader>gy <Action>(GotoTypeDeclaration)
map <leader>gi <Action>(GotoImplementation)
map <leader>gu <Action>(ShowUsages)
map <leader>gt <Action>(GotoTest)
map <leader>gf <Action>(Back)
map <leader>gb <Action>(Forward)

" Run & Debugging
map <leader>pd <Action>(Debug)
map <leader>pq <Action>(Stop)
map <leader>pb <Action>(ToggleLineBreakpoint)
map <leader>pt :action RerunTests<cr>
map <leader>pT :action RerunFailedTests<cr>
map <leader>pp :action Tool_External Tools_Alacritty<cr>
map <leader>pr :action IdeaVim.ReloadVimRc.reload<cr> 

" Which Key
"" ========================================================
let g:WhichKey_FontSize = 16
let g:WhichKey_Divider = " ‚û°Ô∏è "
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"
let g:WhichKey_ShowTypedSequence = "true"
let g:WhichKey_ShowVimActions = "true"

let g:WhichKeyDesc_leader = "<leader> Leader key"

" Groups
let g:WhichKeyDesc_group1 = "<leader>h Harpoon ‚öì"
let g:WhichKeyDesc_group2 = "<leader>f Telescope üî≠"
let g:WhichKeyDesc_group3 = "<leader>p Run & Debugging üèÉ"
let g:WhichKeyDesc_group4 = "<leader>s Sneak üëü"
let g:WhichKeyDesc_group5 = "<leader>q Close ‚ùå"
let g:WhichKeyDesc_group6 = "<leader>r Refactor ‚úíÔ∏è""

let g:WhichKeyDesc_group6 = "<leader><leader>"

" Commands
let g:WhichKeyDesc_fd = "<leader>/ Find üìÑüîç"
" let g:WhichKeyDesc_ff = "<leader>. Find Files üìÇüîç"
